단축키 컨+쉬+o   자동임폴트
	컨+쉬+F 자동 줄맞춤

기본
		//equals는 객체의 값 을비교 == 두 객제가 동일한걸 참조하는지 비교
		compareTo 는 대소문자 상관 compareToIgnoreCase 는 대소문자 상관 안함
	변수.substring(2); > 그변수의 세번째부터 출력 (2,4)면 세번째부터 출력 다섯번째미만 (네번째)까지 출력 
	// 변수에 있는 값을 시작하는 곳을 변경 할수 있는곳 즉 범위로 설정한만큼만 출력할수 있음
return 은 끝내기 및 값넣을수있음

입력 스캐너
		Scanner s = new Scanner(System.in);
		 = s.nextInt();
		닫을땐 s.close();
랜덤 함수

int a = (int) (Math.random() * 898)//범위// + 102;//시작수설정할수 있음//

혹은 Random a = new Random
	변수 = a.nextInt(범위)+시작수;
(d.equals("n")) 문자열 비교 == 같은거임
반복문
for (;;) 로 반복만 하게 할수 있음
break; 나가기    continue; 위로가서 다시

클래스
같은 프로젝트 내에선 class명으로 끌어쓸수있음
print 쓰는것만 void인듯?

class명 내가쓸이름 = new class명();

클래스 이름과 생성자 이름 같을수 있음, 오버로딩해줘야함(똑같은거 또만들기)
클래스 내에서 여러가지 공식을 만들 수 있음

클래스 참조하면 같은 인스턴스를 써서 다르게 하려면 new로 새로 해줘야함.
참조변수에 null 대입하면 그 클래스와의 관계를 끝냄 (데이터 삭제는 아님);

Private << 은 그 변수? 에 접근하지 못하게 하는것 (정보은닉)

class Box1 {
	private String contents;
	private int boxNum;

	Box1(int num, String cont) {
		boxNum = num;
		contents = cont;

 애기클래스 extends 부모클래스   = 애기클래스는 부모클래스꺼 쓸수가있음.
super.뭐시기	 를 쓰면 부모꺼를  내꺼에 가져와 덮어쓸수있음.
	}

	public int getBoxNum() {
		return boxNum;
	}

	public String toString() {
		return contents;
	}
}

배열

배열 기본선언 int[] ar1 = new int[5];
클래스 껄 불러서 할수 있음 		Box[] ar = new Box[3];
cnum += sr[i].length();   배열의 자릿수 sr.length 은 sr의 배열자릿수
fill -> for문처럼 반복되는느낌. 정의되어있는 메소드로 원하는값으로 배열 전부 또는 일부를 채울때 사용
for(int e:ar)  << 배열 전체를 반복해서 꺼낼때. 범위지정 안됨


패키지

import 해서 쓰면 그 패키지에 있는거 그냥 쓸수있음.
import com.company.area.Circle;

public class B_ImportCircle {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Circle c1 = new Circle(3.5);
		System.out.println("반지름 3.5 원 넓이 : "+c1.getArea());

아니면 그냥 new로 다 불러와서 패키지명적기
com.company.area.Circle c1 = new com.company.area.Circle(3.5);

접근

클래스 선언시 앞에 아무것도 없으면 default로 선언되서 다른 패키지에서 쓸 수 없음
public 을 붙히고 선언하면 다른 패키지에서 사용 가능 ㄱㅇㄷ

스태틱으로 선언된 변수는 개별 인스턴스 내부 변수가 아니라 모든인스턴스가 공유하는 클래스 변수가 됨.

변수 
		stbuf.append(45678);//문자열 붙히기
		System.out.println(stbuf.toString());
		
		stbuf.delete(0, 2);//문자열 일부 삭제
		System.out.println(stbuf.toString());
		
		stbuf.replace(0, 3, "AB");//문자열 0~3자리를 "ab로 교체
		System.out.println(stbuf.toString());
		
		stbuf.reverse();//문자열 내용 뒤집기


